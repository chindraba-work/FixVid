#!/bin/bash

########################################################################
#                                                                      #
#  hts-remix: combine normalized channel files into one stream         #
#                                                                      #
#  This file is part of FixVid, a system to semi-automatically modify  #
#  and re-encode video files to create an acceptable version for a     #
#  standardized collection or library of videos.                       #
#                                                                      #
#  Copyright Â© 2018, 2019  Ronald Lamoreaux <code@chindraba.work>      #
#  - All Rights Reserved                                               #
#                                                                      #
#  FixVid is free software; you can redistribute it and/or             #
#  modify it under the terms of the GNU General Public License,        #
#  version 2 only, as published by the Free Software Foundation.       #
#                                                                      #
#  FixVid is distributed in the hope that it will be useful,           #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of      #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       #
#  GNU General Public License for more details.                        #
#                                                                      #
#  You should have received a copy of the GNU General Public License   #
#  along with this program; if not, write to the                       #
#        Free Software Foundation, Inc.                                #
#        51 Franklin Street                                            #
#        Fifth Floor                                                   #
#        Boston, MA  02110-1301                                        #
#        USA.                                                          #
#                                                                      #
########################################################################

#
# Command script to take the normalized individual channels and remix
# the surround sound for the video.
#

# Load the configuration file
[[ -s fixvid.conf ]] && . fixvid.conf || exit 4;

# Load the helper functions and common settings
source "$fixvid_dir/helpers";

group='audio';
required='stream';
group_fields="source stream label title lang channels layout mapping \
mixing dyna_stereo dyna_center dyna_origin dyna_extras dyna_others \
make_ac3 include_ac3 make_aac include_aac \
make_channels include_channels \
make_dts include_dts";

function do_remix {
  # Check for the need to make surround sound streams
  [[ 1 = $audio_make_channels ]] || \
  [[ 1 = $audio_include_channels ]] || \
  [[ 1 = $audio_make_dts ]] || \
  [[ 1 = $audio_include_dts ]] ||
    return 0;

  # Test for surround sound and load surround sound settings
  multi_channel_setup || return 0;

  # Set the output filename base
  work_prefix="${work_prefix}-channels";

  # Check for, and set the title of the streams
  [[ $audio_title ]] || audio_title="$video_title surround sound";

  # Skip this if it has already been done.
  # To rerun, delete the *-remix.* files first
  [[ 1 != $audio_make_ac3 ]] && \
  [[ 1 != $audio_include_ac3 ]] && \
    extension='aac' || extension='ac3';
  [[ -s "${work_prefix}-remix.$extension" ]] && \
    return 3;

  # Check for all dependent files
  # Force hts-normalize to (re)make all if one is missing
  files_ready=0;
  for channel in $audio_layout; do
    [[ -s "${work_prefix}-adj-$channel.wav" ]] || files_ready=1;
  done
  [[ 0 = $files_ready ]] || {
    rm -f "${work_prefix}-adj-fl.wav";
    echo "Normalized files not found.";
    echo " ... Creating ...";
    echo "";
    "$fixvid_dir/hts-normalize" $group_num;
  }

  unset channels_in;
  unset channel_in;
  unset channel_pad;
  unset pad_list;
  channel_count=0;
  for channel in $audio_layout; do
    channel_in="$input_flags -i ${work_prefix}-adj-${channel}.wav";
    channel_pad="[$channel_count:0]";
    channels_in="${channels_in} ${channel_in}";
    pad_list="${pad_list}${channel_pad}";
    channel_count=$(( $channel_count + 1 ));
  done

  [[ 1 = $audio_make_aac ]] || \
  [[ 1 = $audio_include_aac ]] && \
    multi_launch "${audio_label} Remix to AAC" bash -c "FFREPORT=file='fixvid-${work_prefix}-remix-aac.log':level=40 ffmpeg -hide_banner -y -loglevel error -stats $channels_in -filter_complex '$pad_list amerge=inputs=$channel_count [CHANNELS];[CHANNELS] $audio_maping [OUT]' -map [OUT] $strip_meta_all $file_meta -metadata:s:0 language=$audio_lang -metadata:s:0 title='$audio_title (Enhanced)' -c:0 libfdk_aac -profile:a aac_he -b:a 384k $use_threads $file_meta '${work_prefix}-remix.aac'";
  [[ 1 = $audio_make_ac3 ]] || \
  [[ 1 = $audio_include_ac3 ]] && \
    multi_launch "${audio_label} Remix to AC3" bash -c "FFREPORT=file='fixvid-${work_prefix}-remix-ac3.log':level=40 ffmpeg -hide_banner -y -loglevel error -stats $channels_in -filter_complex '$pad_list amerge=inputs=$channel_count [CHANNELS];[CHANNELS] $audio_maping [OUT]' -map [OUT] $strip_meta_all $file_meta -metadata:s:0 language=$audio_lang -metadata:s:0 title='$audio_title (Enhanced)' -c:0 ac3 -b:a 640k $use_threads $file_meta '${work_prefix}-remix.ac3'";

  wait
}


# Read the optional argument.
[[ $1 ]] && target_num=$1 || target_num=0;

process_group do_remix $group $required $target_num $group_fields;

