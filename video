#!/bin/bash

########################################################################
#                                                                      #
#  video: script to control the extraction of multiple video versions  #
#                                                                      #
#  This file is part of FixVid, a system to semi-automatically modify  #
#  and re-encode video files to create an acceptable version for a     #
#  standardized collection or library of videos.                       #
#                                                                      #
#  Copyright Â© 2018  Ronald Lamoreaux <code@chindraba.work>            #
#  - All Rights Reserved                                               #
#                                                                      #
#  FixVid is free software; you can redistribute it and/or             #
#  modify it under the terms of the GNU General Public License,        #
#  version 2 only, as published by the Free Software Foundation.       #
#                                                                      #
#  FixVid is distributed in the hope that it will be useful,           #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of      #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       #
#  GNU General Public License for more details.                        #
#                                                                      #
#  You should have received a copy of the GNU General Public License   #
#  along with this program; if not, write to the                       #
#        Free Software Foundation, Inc.                                #
#        51 Franklin Street                                            #
#        Fifth Floor                                                   #
#        Boston, MA  02110-1301                                        #
#        USA.                                                          #
#                                                                      #
########################################################################

#
# Command script to launch extract_video with all the proper parameters
# set. May launch the extraction multiple time if there are multiple
# occurrences of the video configuration variables.
#
# Accepts 1 optional argument:
#     group_num   Which setting group to use in extraction.
#                 A value of "0", or no argument, will cycle through
#                 all the available groups, extracting a video for
#                 each. Any other number will extract one video,
#                 using the group number to determine which one to
#                 use.
#
# Reads fixvid.conf for:
#     video_label_n
#     video_codec_n
#     video_params_n
#     video_equalizer_n     The eq video filter settings
#     video_adjust_n
#     video_complex_n
#         where "n" is an integer number beginning at "1"
#
# Displays nothing.
#
# Generates 0 files:
#

# Load the configuration file
[[ -s fixvid.conf ]] && . fixvid.conf || exit 4;

# Read the optional argument.
[[ $1 ]] && group_num=$1 || group_num=0;

# Flag to process, or not, all setting groups
[[ 0 = $group_num ]] && all_groups=1 || unset all_groups;

group_prefix="video";
group_key="codec";
group_items="label codec params equalizer adjust complex";

# Find the last valid group number
group_limit=1;
var="${group_prefix}_${group_key}_${group_limit}";
while [[ ${!var} ]]; do
  ((group_limit++));
  var="${group_prefix}_${group_key}_${group_limit}";
done;

[[ 0 = $group_num ]] && group_num=1;

# Set the continue flag based on the validity of requested group number
[[ $group_num < $group_limit ]] && continue=1 || unset continue;

# Walk through the list of valid group numbers
while [[ $continue ]]; do
  # Load the group settings into the generic set for video extraction
  for item in $group_items; do
    var="${group_prefix}_${item}_${group_num}";
    declare ${group_prefix}_${item}="${!var}";
  done
  # Do the video extraction for this group
  source "$fixvid_dir/extract-video";
  (( group_num++ ));
  # Check for completion
  [[ $all_groups ]] && [[ $group_num < $group_limit ]] && continue=1 || unset continue;
done
