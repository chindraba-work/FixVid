#!/bin/bash

########################################################################
#                                                                      #
#  hts-merge: combine individual channel files into one soundtrack     #
#                                                                      #
#  This file is part of FixVid, a system to semi-automatically modify  #
#  and re-encode video files to create an acceptable version for a     #
#  standardized collection or library of videos.                       #
#                                                                      #
#  Copyright Â© 2018, 2019  Ronald Lamoreaux <code@chindraba.work>      #
#  - All Rights Reserved                                               #
#                                                                      #
#  FixVid is free software; you can redistribute it and/or             #
#  modify it under the terms of the GNU General Public License,        #
#  version 2 only, as published by the Free Software Foundation.       #
#                                                                      #
#  FixVid is distributed in the hope that it will be useful,           #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of      #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       #
#  GNU General Public License for more details.                        #
#                                                                      #
#  You should have received a copy of the GNU General Public License   #
#  along with this program; if not, write to the                       #
#        Free Software Foundation, Inc.                                #
#        51 Franklin Street                                            #
#        Fifth Floor                                                   #
#        Boston, MA  02110-1301                                        #
#        USA.                                                          #
#                                                                      #
########################################################################

#
# Command script to take the 6 channels and build the 5.1 surround sound
# for the video.
#
# Accepts no arguments.
#
# Reads fixvid.conf for:
#     work_files    the prefix of filenames for work files
#     video_title   added to the title metadata of the files
#     channel_map     the filter used to split the stream into channels
#     channel_list    the list of channels to process
#     stereo_mix      the ratios for mixing surround sound to stereo
#     timestamp     entered in the creation_time metadata for streams
# Reads the channel files made by hts-normalize:
#     *-surround-e*.wav       The normalized channel sound file
#
# Displays the ffmpeg progress line while running and the results of the
# time command once finished.
#
# Generates 4 file:
#     *-surround-adjusted-merge-aac.log   The ffmpeg output
#     *-surround-adjusted-merge-ac3.log   The ffmpeg output
#     *-surround-adjusted.aac             Normailzed surround sound, AAC
#     *-surround-adjusted.ac3             Normailzed surround sound, AC3
#

# Load the configuration file
[[ -s fixvid.conf ]] && . fixvid.conf || exit 4;

# Set the output filename base
work_prefix="${work_files}-surround";

# Skip this if it has already been done.
# To rerun, delete the *_surround_adjusted.ac3 file first
[[ -s "${work_prefix}-adjusted.ac3" ]] && exit 3;

# Set the channel data based on the chosen surround layout
# Invalid, or missing, layout will abort the process
case "$surround_layout" in
  '7.1' )
    channel_map=$channel_map_71
    channel_list=$channel_list_71
    stereo_mix=$stereo_mix_71
    ;;
  '5.1' )
    channel_map=$channel_map_51
    channel_list=$channel_list_51
    stereo_mix=$stereo_mix_51
    ;;
  '5.1(side)' )
    channel_map=$channel_map_51_side
    channel_list=$channel_list_51_side
    stereo_mix=$stereo_mix_51_side
    ;;
  * )
    exit 3
    ;;
esac

# Check for all dependent files
# Force hts-normalize to (re)make all if one is missing
files_ready=0;
for channel in $channel_list; do
  [[ -s "${work_prefix}-e$channel.wav" ]] || files_ready=1;
done
[[ 0 = $files_ready ]] || {
  rm -f "${work_prefix}-efc.wav";
  echo "Normalized files not found.";
  echo " ... Creating ...";
  echo "";
  time "$fixvid_dir/hts-normalize";
}

channel_count=0;
for channel in $channel_list; do
  channel_pad="[$channel_count:0]";
  channel_count=$(( $channel_count + 1 ));
  pad_list="${pad_list}${channel_pad}";
  channel_in="$input_flags -i ${work_prefix}-e${channel}.wav";
  in_list="${in_list} ${channel_in}";
done

multi_launch "Enhanced AAC" bash -c "FFREPORT=file='fixvid-${work_prefix}-merge-aac.log':level=40 ffmpeg -hide_banner -y -loglevel error -stats $in_list -filter_complex '$pad_list amerge=inputs=$channel_count [CHANNELS];[CHANNELS] $channel_map [OUT]' -map [OUT] $strip_meta_all $file_meta -metadata:s:0 language=eng -metadata:s:0 title='$surround_layout Surround (Enhanced)' -c:0 libfdk_aac -profile:a aac_he -b:a 384k $use_threads $file_meta '${work_prefix}-adjusted.aac'";
multi_launch "Enhanced AC3" bash -c "FFREPORT=file='fixvid-${work_prefix}-merge-ac3.log':level=40 ffmpeg -hide_banner -y -loglevel error -stats $in_list -filter_complex '$pad_list amerge=inputs=$channel_count [CHANNELS];[CHANNELS] $channel_map [OUT]' -map [OUT] $strip_meta_all $file_meta -metadata:s:0 language=eng -metadata:s:0 title='$surround_layout Surround (Enhanced)' -c:0 ac3 -b:a 640k $use_threads $file_meta '${work_prefix}-adjusted.ac3'";

wait
