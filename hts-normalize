#!/bin/bash

########################################################################
#                                                                      #
#  hts-normalize: apply normalization filter to channel files          #
#                                                                      #
#  This file is part of FixVid, a system to semi-automatically modify  #
#  and re-encode video files to create an acceptable version for a     #
#  standardized collection or library of videos.                       #
#                                                                      #
#  Copyright Â© 2018, 2019  Ronald Lamoreaux <code@chindraba.work>      #
#  - All Rights Reserved                                               #
#                                                                      #
#  FixVid is free software; you can redistribute it and/or             #
#  modify it under the terms of the GNU General Public License,        #
#  version 2 only, as published by the Free Software Foundation.       #
#                                                                      #
#  FixVid is distributed in the hope that it will be useful,           #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of      #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       #
#  GNU General Public License for more details.                        #
#                                                                      #
#  You should have received a copy of the GNU General Public License   #
#  along with this program; if not, write to the                       #
#        Free Software Foundation, Inc.                                #
#        51 Franklin Street                                            #
#        Fifth Floor                                                   #
#        Boston, MA  02110-1301                                        #
#        USA.                                                          #
#                                                                      #
########################################################################

#
# Command script to normalize each of the independent channel files from
# the surround sound soundtrack. Uses the files created by hts-split.
# If any of the 6 input files are missing, forces a run of hts-split.
#

# Load the configuration file
[[ -s fixvid.conf ]] && . fixvid.conf || exit 4;

# Load the helper functions and common settings
source "$fixvid_dir/helpers";

group='audio';
required='stream';
group_fields="source stream label title lang layout channels include \
dyna_center dyna_extras dyna_origin dyna_stereo mapping mixing";

function do_normalize {
  # Test for surround sound and load surround sound settings
  surround_sound_settings || return 0;

  # Skip this if it has already been done.
  # To rerun, delete the *-channels-adj-fl.wav file first
  [[ -s "${work_prefix}-channels-adj-fl.wav" ]] && return 0;

  # Check for all dependent files
  # Force hts-explode to (re)make all if one is missing
  files_ready=0;
  for channel in $audio_layout; do
    [[ -s "${work_prefix}-channels-$channel.wav" ]] || files_ready=1;
  done
  [[ 0 = $files_ready ]] || {
    rm -f "${work_prefix}-channels-fl.wav";
    echo "One, or more, of the channel files not found.";
    echo "... Creating ...";
    echo "";
    "$fixvid_dir/hts-explode" $group_num;
  }

  # Process the regular channel files and make the enhanced versions
  for channel in $audio_layout; do
    case "$channel" in
      'fl' | 'fr' )
        channel_dyna="$audio_dyna_origin"
        ;;
      'fc' )
        channel_dyna="$audio_dyna_center"
        ;;
      *)
        channel_dyna="$audio_dyna_extras"
        ;;
    esac
    multi_launch "Normalize ${audio_label} ${channel^^} channel" bash -c "FFREPORT=file='fixvid-${work_prefix}-${channel}.part':level=40 ffmpeg -hide_banner -y -loglevel error -stats $input_flags -i '${work_prefix}-channels-$channel.wav' -map 0:0 -af $audio_dyna_origin $strip_meta_all $file_meta -metadata:s:0 language=$audio_lang -metadata:s:0 title='$audio_title [${channel^^}] (Enhanced)' -c:0 pcm_s16le -b:a 384k $use_threads $file_meta $output_flags '${work_prefix}-channels-adj-$channel.wav'"
  done

  wait

  # Feed the individual log files into a single log file
  rm -f "fixvid-${work_prefix}-normalize.log";
  for channel in $audio_layout; do
    cat "fixvid-${work_prefix}-${channel}.part" >> "fixvid-${work_prefix}-normalize.log";
    rm -f "fixvid-${work_prefix}-${channel}.part";
  done
}

# Read the optional argument.
[[ $1 ]] && target_num=$1 || target_num=0;

process_group do_normalize $group $required $target_num $group_fields;

