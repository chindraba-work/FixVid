#!/bin/bash

########################################################################
#                                                                      #
#  hts-normalize: apply dynaudnorm filter of ffmpeg to channel files   #
#                                                                      #
#  This file is part of FixVid, a system to semi-automatically modify  #
#  and re-encode video files to create an acceptable version for a     #
#  standardized collection or library of videos.                       #
#                                                                      #
#  Copyright Â© 2018, 2019  Ronald Lamoreaux <code@chindraba.work>      #
#  - All Rights Reserved                                               #
#                                                                      #
#  FixVid is free software; you can redistribute it and/or             #
#  modify it under the terms of the GNU General Public License,        #
#  version 2 only, as published by the Free Software Foundation.       #
#                                                                      #
#  FixVid is distributed in the hope that it will be useful,           #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of      #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       #
#  GNU General Public License for more details.                        #
#                                                                      #
#  You should have received a copy of the GNU General Public License   #
#  along with this program; if not, write to the                       #
#        Free Software Foundation, Inc.                                #
#        51 Franklin Street                                            #
#        Fifth Floor                                                   #
#        Boston, MA  02110-1301                                        #
#        USA.                                                          #
#                                                                      #
########################################################################

#
# Command script to normalize each of the independent channel files from
# the surround sound soundtrack. Uses the files created by hts-split.
# If any of the 6 input files are missing, forces a run of hts-split.
#
# Accepts no arguments.
#
# Reads fixvid.conf for:
#     work_files      the prefix of filenames for work files
#     video_title     added to the title metadata of the files
#     channel_map     the filter used to split the stream into channels
#     channel_list    the list of channels to process
#     stereo_mix      the ratios for mixing surround sound to stereo
#     timestamp       entered in the creation_time metadata for streams
#     dyna_center     the filter to apply to the center channel
#     dyna_front      the filter to apply to the left & right channels
#     dyna_surround   the filter to apply to other channels
#     channel_map     the filter used to split the stream into channels
#     channel_list    the list of channels to process
#     stereo_mix      the ratios for mixing surround sound to stereo
# Reads the channel files made by hts-split:
#     *-surround-*.wav     The channel from the source
#
# Displays the ffmpeg progress line while running and the results of the
# time command once finished.
#
# Generates 1 file plus 1 per channel:
#     fixvid-*-normalize.log    The captured output of the ffmpeg command
#     *-surround-*.wav          The normalized channel sound
#

# Load the configuration file
[[ -s fixvid.conf ]] && . fixvid.conf || exit 4;

# Set the output filename base
work_prefix="${work_files}-surround";

# Skip this if it has already been done.
# To rerun, delete the *_surround_fce.wav file first
[[ -s "${work_prefix}_efc.wav" ]] && exit 3;

# Set the channel data based on the chosen surround layout
# Invalid, or missing, layout will abort the process
case "$surround_layout" in
  '7.1' )
    channel_map=$channel_map_71
    channel_list=$channel_list_71
    stereo_mix=$stereo_mix_71
    ;;
  '5.1' )
    channel_map=$channel_map_51
    channel_list=$channel_list_51
    stereo_mix=$stereo_mix_51
    ;;
  '5.1(side)' )
    channel_map=$channel_map_51_side
    channel_list=$channel_list_51_side
    stereo_mix=$stereo_mix_51_side
    ;;
  * )
    exit 3
    ;;
esac

# Check for all dependent files
# Force hts-split to (re)make all if one is missing
files_ready=0;
for channel in $channel_list; do
  [[ -s "${work_prefix}-$channel.wav" ]] || files_ready=1;
done
[[ 0 = $files_ready ]] || {
  rm -f "${work_prefix}-fc.wav";
  echo "One, or more, of the channel files not found.";
  echo "... Creating ...";
  echo "";
  time "$fixvid_dir/hts-split";
}


# Process the regular channel files and make the enhanced versions
for channel in $channel_list; do
  case "$channel" in
    'fl' | 'fr' )
      encoding="-map 0:0 -af $dyna_front -c:0 pcm_s16le -b:a 384k $use_threads $output_flags"
      ;;
    'fc' )
      encoding="-map 0:0 -af $dyna_center -c:0 pcm_s16le -b:a 384k $use_threads $output_flags"
      ;;
    *)
      encoding="-map 0:0 -af $dyna_surround -c:0 pcm_s16le -b:a 384k $use_threads $output_flags"
      ;;
  esac
  multi_launch "${channel^^} channel" bash -c "FFREPORT=file='fixvid-${work_prefix}-${channel}.part':level=40 ffmpeg -hide_banner -y -loglevel error -stats $input_flags -i '${work_prefix}-$channel.wav' $encoding '${work_prefix}-e$channel.wav'"
done

wait

# Feed the individual log files into a single log file
rm -f "fixvid-${work_prefix}-normalize.log";
for channel in $channel_list; do
  cat "fixvid-${work_prefix}-${channel}.part" >> "fixvid-${work_prefix}-normalize.log";
  rm -f "fixvid-${work_prefix}-${channel}.part";
done
