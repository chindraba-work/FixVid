#!/bin/bash

########################################################################
#                                                                      #
#  build-video: build a new video from the extracted component files   #
#                                                                      #
#  This file is part of FixVid, a system to semi-automatically modify  #
#  and re-encode video files to create an acceptable version for a     #
#  standardized collection or library of videos.                       #
#                                                                      #
#  Copyright Â© 2018, 2019  Ronald Lamoreaux <code@chindraba.work>      #
#  - All Rights Reserved                                               #
#                                                                      #
#  FixVid is free software; you can redistribute it and/or             #
#  modify it under the terms of the GNU General Public License,        #
#  version 2 only, as published by the Free Software Foundation.       #
#                                                                      #
#  FixVid is distributed in the hope that it will be useful,           #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of      #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       #
#  GNU General Public License for more details.                        #
#                                                                      #
#  You should have received a copy of the GNU General Public License   #
#  along with this program; if not, write to the                       #
#        Free Software Foundation, Inc.                                #
#        51 Franklin Street                                            #
#        Fifth Floor                                                   #
#        Boston, MA  02110-1301                                        #
#        USA.                                                          #
#                                                                      #
########################################################################

#
# Command script to build a new video from the extracted, and modified
# component files generated in earlier steps. This video is the final
# product, without the proper filename. Since there is the potential to
# make multiple source videos, and/or various versions of the subtitles
# this script will require a separate launcher to handle the logic of
# selecting the source files for each final version.
#

# Function to add each available version of the subtitles
function add_subs {
  # Set the file extension based on subtitle type
  case ${subs_type,,} in
    text|subrip|srt|ass|aas  )
      subs_ext='ass';
      ;;
    dvd_sub*|vobsub )
      subs_ext='mkv';
      ;;
    * )
      return 3
      ;;
  esac
  # Check for needed file and that this version is included
  if [[ -s "${work_files}-subs-${subs_label}.$subs_ext" ]]; then
    echo "Found ${work_files}-subs-${subs_label}.$subs_ext";
  else
    echo "${work_files}-subs-${subs_label}.$subs_ext NOT found";
  fi
  if [[ $subs_included ]]; then
    echo "Including subs $subs_label";
  else
    echo "Skipping subs $subs_label";
  fi
  if [[ -s "${work_files}-subs-${subs_label}.$subs_ext" ]] \
    && [[ $subs_included ]]; then
    echo "All good"
  else
    echo "Not happening";
  fi
  [[ -s "${work_files}-subs-${subs_label}.$subs_ext" ]] \
    && [[ $subs_included ]] || return 3;
echo "Moving on with $group_num: $subs_label";
  # Check for, and set the language for the subtitles
  [[ $subs_lang ]] || subs_lang="$video_lang";

  source_list="$source_list \
  $input_flags -i '${work_files}-subs-${subs_label}.$subs_ext'";
  stream_list="$stream_list \
  -map $source_count:0 -c:$stream_count copy \
  -metadata:s:$stream_count language='$subs_lang' \
  -metadata:s:$stream_count title='$subs_title'";
  if [[ $subs_SDH ]]; then
    stream_list="$stream_list \
    -disposition:$stream_count hearing_impaired";
  fi
  if [[ $subs_default ]]; then
    stream_list="$stream_list \
    -disposition:$stream_count -default";
  else
    stream_list="$stream_list \
    -disposition:$stream_count +default";
    subs_default=$subs_group;
  fi
  source_count=$((++source_count));
  stream_count=$((++stream_count));
}


# Load the configuration file
[[ -s fixvid.conf ]] && . fixvid.conf || return 4;

# Set the output filename base
work_prefix="${work_files}-full-${video_codec}-${video_label}";

# Skip this if it has already been done.
# To rerun, delete the *_full_??.mkv file first
[[ -s "${work_prefix}.mkv" ]] && return 4;

# Make sure our counters and flags are cleared before use
unset source_count;
unset stream_count;
unset subs_default;
source_count=0;
stream_count=0;

# Add the video component (always available)
source_list="$input_flags -i \
\"${work_files}-video-${video_codec}-${video_label}.mkv\"";
stream_list="-map $source_count:0 -c:$stream_count copy \
-metadata:s:$stream_count language=$video_lang \
-metadata:s:$stream_count title=\"$video_title\" \
-disposition:$stream_count +default";
source_count=$((++source_count));
stream_count=$((++stream_count));

# Add the enhanced stereo component (always available)
source_list="$source_list \
$input_flags -i \"${work_files}-stereo-adjusted.aac\"";
stream_list="$stream_list \\
-map $source_count:0 -c:$stream_count copy \\
-metadata:s:$stream_count language=eng \
-metadata:s:$stream_count title='Stereo' \\
-disposition:s:$stream_count default";
source_count=$((++source_count));
stream_count=$((++stream_count));

# Add in the subtitles
# All versions get all available subtitle streams

group='subs';
required='stream';
traget_num=0;
group_fields='label title included SDH type lang';

process_group add_subs $group $required $traget_num $group_fields;

# Add the chapter source file, if any
if [[ "$chapter_file" ]] && [[ -s "$chapter_file" ]]; then
  source_list="$source_list \
  -i \"$chapter_file\"";
  stream_list="$stream_list \\
  -map_chapters $source_count";
  source_count=$((++source_count));
  stream_count=$((++stream_count));
fi

time bash -c "FFREPORT=file='fixvid-${work_prefix}.log':level=40 \
ffmpeg -hide_banner -loglevel quiet -stats -y \
$source_list \
$stream_list \
$file_meta -metadata description=\"Chindraba Enhanced\" \
$use_threads $output_flags \"${work_prefix}.mkv\"";
