#!/bin/bash

########################################################################
#                                                                      #
#  build-video: build a new video from the extracted component files   #
#                                                                      #
#  This file is part of FixVid, a system to semi-automatically modify  #
#  and re-encode video files to create an acceptable version for a     #
#  standardized collection or library of videos.                       #
#                                                                      #
#  Copyright Â© 2018  Ronald Lamoreaux <code@chindraba.work>            #
#  - All Rights Reserved                                               #
#                                                                      #
#  FixVid is free software; you can redistribute it and/or             #
#  modify it under the terms of the GNU General Public License,        #
#  version 2 only, as published by the Free Software Foundation.       #
#                                                                      #
#  FixVid is distributed in the hope that it will be useful,           #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of      #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       #
#  GNU General Public License for more details.                        #
#                                                                      #
#  You should have received a copy of the GNU General Public License   #
#  along with this program; if not, write to the                       #
#        Free Software Foundation, Inc.                                #
#        51 Franklin Street                                            #
#        Fifth Floor                                                   #
#        Boston, MA  02110-1301                                        #
#        USA.                                                          #
#                                                                      #
########################################################################

#
# Command script to build a new video from the extracted, and modified
# component files generated in earlier steps. This video is the final
# product, without the proper filename. Since there is the potential to
# make multiple source videos, and/or various versions of the subtitles
# this script will require a separate launcher to handle the logic of
# selecting the source files for each final version.
#
# Accepts no arguments:
#
# Reads fixvid.conf for:
#         video_title       Name of the video
#         work_files        Filename prefix for working files
#         chapter_file      The file with chapter titles, if any
#         subs_label_n      The filename for subtitle group n
#         subs_title_n      The metadata title for subtitle group n
#         subs_included_n   If subtitle group n is embedded in the video
#         subs_SDH_n        If subtitle group n is for Hearing-Impaired
#
# Displays the ffmpeg progress line while running and the results of the
# time command once finished.
#
# Generates 1 file:
#     *_codec_<video_label>.mkv  The newly created video.
#

# Load the configuration file
[[ -s fixvid.conf ]] && . fixvid.conf || return 4;

# Set the output filename base
work_prefix="${work_files}_full_${video_codec}_${video_label}";

# Skip this if it has already been done.
# To rerun, delete the *_full_??.mkv file first
[[ -s "${work_prefix}.mkv" ]] && return 4;

# Make sure our counters and flags are cleared before use
unset source_count;
unset stream_count;
unset subs_default;

# Add the video component (always available)
source_list="$input_flags -i \
\"${work_files}_video_${video_codec}_${video_label}.mkv\"";
stream_list="-map $source_count:0 -c:$stream_count copy \
-metadata:s:$stream_count language=eng \
-metadata:s:$stream_count title=\"$video_title\" \
-disposition:$stream_count +default";
source_count=$((++source_count));
stream_count=$((++stream_count));

# Add the enhanced stereo component (always available)
source_list="$source_list \
$input_flags -i \"${work_files}_stereo_adjusted.aac\"";
stream_list="$stream_list \\
-map $source_count:0 -c:$stream_count copy \\
-metadata:s:$stream_count language=eng \
-metadata:s:$stream_count title='Stereo' \\
-disposition:s:$stream_count default";
source_count=$((++source_count));
stream_count=$((++stream_count));

# Add in the subtitles
# All versions get all available subtitle streams
subs_group=1;
check_var="subs_stream_$subs_group";
while [[ ${!check_var} ]]; do
  for item in label title included SDH; do
    param_var="subs_${item}_${subs_group}";
    declare subs_$item="${!param_var}";
  done
  if [[ $subs_included ]] && [[ -s "${work_files}_subs_${subs_label}.ass" ]]; then
    source_list="$source_list \
    $input_flags -i \"${work_files}_subs_${subs_label}.ass\"";
    stream_list="$stream_list \
    -map $source_count:0 -c:$stream_count copy \
    -metadata:s:$stream_count language=eng \
    -metadata:s:$stream_count title=\"$subs_title\"";
    if [[ $subs_SDH ]]; then
      stream_list="$stream_list \
      -disposition:$stream_count hearing_impaired";
    fi
    if [[ $subs_default ]]; then
      stream_list="$stream_list \
      -disposition:$stream_count -default";
    else
      stream_list="$stream_list \
      -disposition:$stream_count +default";
      subs_default=$subs_group;
    fi
    source_count=$((++source_count));
    stream_count=$((++stream_count));
  fi
  ((subs_group++));
  check_var="subs_source_$subs_group";
done

# Add the chapter source file, if any
if [[ $chapter_file ]] && [[ -s $chapter_file ]]; then
  source_list="$source_list \
  -i \"$chapter_file\"";
  stream_list="$stream_list \\
  -map_chapters $source_count";
  source_count=$((++source_count));
  stream_count=$((++stream_count));
fi

time bash -c "FFREPORT=file='fixvid_${work_prefix}.log':level=40 \
ffmpeg -hide_banner -loglevel quiet -stats -y \
$source_list \
$stream_list \
$file_meta -metadata description=\"Chindraba Enhanced\" \
$use_threads $output_flags \"${work_prefix}.mkv\"";
