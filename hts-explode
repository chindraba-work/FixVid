#!/bin/bash

########################################################################
#                                                                      #
#  hts-explode: extract individual channel sound files from source     #
#                                                                      #
#  This file is part of FixVid, a system to semi-automatically modify  #
#  and re-encode video files to create an acceptable version for a     #
#  standardized collection or library of videos.                       #
#                                                                      #
#  Copyright Â© 2018, 2019  Ronald Lamoreaux <code@chindraba.work>      #
#  - All Rights Reserved                                               #
#                                                                      #
#  FixVid is free software; you can redistribute it and/or             #
#  modify it under the terms of the GNU General Public License,        #
#  version 2 only, as published by the Free Software Foundation.       #
#                                                                      #
#  FixVid is distributed in the hope that it will be useful,           #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of      #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       #
#  GNU General Public License for more details.                        #
#                                                                      #
#  You should have received a copy of the GNU General Public License   #
#  along with this program; if not, write to the                       #
#        Free Software Foundation, Inc.                                #
#        51 Franklin Street                                            #
#        Fifth Floor                                                   #
#        Boston, MA  02110-1301                                        #
#        USA.                                                          #
#                                                                      #
########################################################################

#
# Command script to extract the surround sound from a file and separate
# the channels into independent files for later processing. Also saves
# the original surround sound soundtrack to external files.
#

# Load the configuration file
[[ -s fixvid.conf ]] && . fixvid.conf || exit 4;

# Load the helper functions and common settings
source "$fixvid_dir/helpers";

group='audio';
required='stream';
group_fields="source stream label title lang channels layout mapping \
mixing dyna_stereo dyna_center dyna_origin dyna_extras dyna_others \
make_ac3 include_ac3 make_aac include_aac \
make_channels include_channels \
make_dts include_dts";

function do_explode {
  # Check for the need to make surround sound streams
  [[ 1 = $audio_make_channels ]] || \
  [[ 1 = $audio_include_channels ]] || \
  [[ 1 = $audio_make_dts ]] || \
  [[ 1 = $audio_include_dts ]] || \
    return 0;

  # Test for surround sound and load surround sound settings
  multi_channel_setup || return 0;

  # Set the output filename base
  work_prefix="${work_prefix}-channels";

  # Check for, and set the title of the streams
  [[ $audio_title ]] || audio_title="$video_title surround sound";

  # Skip this if it has already been done.
  # To rerun, delete the *-fl.wav file first
  [[ -s "${work_prefix}-fl.wav" ]] && return 0;

  unset channels_out;
  unset channel_out;
  unset channel_pad;
  unset pad_list;
  for channel in $audio_layout; do
    channel_pad="[${channel^^}]";
    pad_list="${pad_list}${channel_pad}";
    channel_out="-map [${channel^^}] $strip_meta_all $file_meta -metadata:s:0 language=$audio_lang -metadata:s:0 title='$audio_title ${channel^^} Channel' -c:0 pcm_s16le -b:a 384k $use_threads $audio_only $file_meta $output_flags '${work_prefix}-${channel,,}.wav'"
    channels_out="${channels_out} ${channel_out}";
  done

  # Create the AAC and/or AC3 files if they are missing.
  # They don't need to be created after the first time
  [[ 1 = $audio_make_aac ]] || \
  [[ 1 = $audio_include_aac ]] && \
  [[ ! -s "${work_prefix}.aac" ]] && \
    multi_launch "${audio_label} Original to AAC" bash -c "FFREPORT=file='fixvid-${work_prefix}-explode-aac.log':level=40 ffmpeg -hide_banner -y -loglevel error -stats $input_flags -i $audio_source -map 0:$audio_stream $strip_meta_all $file_meta -metadata:s:0 language=$audio_lang -metadata:s:0 title='$audio_title' -c:0 libfdk_aac -profile:a aac_he -b:a 384k $audio_only $use_threads $output_flags '${work_prefix}.aac'";
  [[ 1 = $audio_make_ac3 ]] || \
  [[ 1 = $audio_include_ac3 ]] && \
  [[ ! -s "${work_prefix}.ac3" ]] && \
    multi_launch "${audio_label} Original to AC3" bash -c "FFREPORT=file='fixvid-${work_prefix}-explode-ac3.log':level=40 ffmpeg -hide_banner -y -loglevel error -stats $input_flags -i $audio_source -map 0:$audio_stream $strip_meta_all $file_meta -metadata:s:0 language=$audio_lang -metadata:s:0 title='$audio_title' -c:0 ac3 -b:a 640k $audio_only $use_threads $output_flags '${work_prefix}.ac3'";

  # Extract the channels
  multi_launch "${audio_label} Split channels" bash -c "FFREPORT=file='fixvid-${work_prefix}-explode-channels.log':level=40 ffmpeg -hide_banner -y -loglevel error -stats $input_flags -i $audio_source -filter_complex '[0:$audio_stream] channelsplit=channel_layout=$audio_channels $pad_list' $channels_out";

  wait
}

# Read the optional argument.
[[ $1 ]] && target_num=$1 || target_num=0;

process_group do_explode $group $required $target_num $group_fields;


